// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReportWriterData;

namespace ReportWriterData.Migrations
{
    [DbContext(typeof(ReportWriterContext))]
    [Migration("20200518232907_SeedTry7")]
    partial class SeedTry7
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ReportWriterData.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("ReportWriterData.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("ReportWriterData.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Forename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeachingGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeachingGroupId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DOB = new DateTime(1970, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Forename = "Mark",
                            Gender = "M",
                            Surname = "Hanley",
                            TeachingGroupId = 1
                        },
                        new
                        {
                            Id = 2,
                            DOB = new DateTime(1978, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Forename = "Veronica",
                            Gender = "F",
                            Surname = "Hanley",
                            TeachingGroupId = 1
                        },
                        new
                        {
                            Id = 3,
                            DOB = new DateTime(2001, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Forename = "Nicky",
                            Gender = "F",
                            Surname = "Manosalvas",
                            TeachingGroupId = 1
                        },
                        new
                        {
                            Id = 4,
                            DOB = new DateTime(2003, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Forename = "Seb",
                            Gender = "M",
                            Surname = "Manolsalvas",
                            TeachingGroupId = 1
                        },
                        new
                        {
                            Id = 5,
                            DOB = new DateTime(2012, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Forename = "Sammy",
                            Gender = "M",
                            Surname = "Hanley",
                            TeachingGroupId = 1
                        },
                        new
                        {
                            Id = 6,
                            DOB = new DateTime(2018, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Forename = "Noah",
                            Gender = "M",
                            Surname = "Hanley",
                            TeachingGroupId = 1
                        });
                });

            modelBuilder.Entity("ReportWriterData.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("ReportWriterData.Models.TeachingGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TeachingGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "6MH"
                        },
                        new
                        {
                            Id = 2,
                            Name = "6GI"
                        });
                });

            modelBuilder.Entity("ReportWriterData.Models.Comment", b =>
                {
                    b.HasOne("ReportWriterData.Models.Report", null)
                        .WithMany("Comments")
                        .HasForeignKey("ReportId");

                    b.HasOne("ReportWriterData.Models.Subject", "Subject")
                        .WithMany("Comments")
                        .HasForeignKey("SubjectId");
                });

            modelBuilder.Entity("ReportWriterData.Models.Report", b =>
                {
                    b.HasOne("ReportWriterData.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("ReportWriterData.Models.Student", b =>
                {
                    b.HasOne("ReportWriterData.Models.TeachingGroup", "TeachingGroup")
                        .WithMany()
                        .HasForeignKey("TeachingGroupId");
                });
#pragma warning restore 612, 618
        }
    }
}
